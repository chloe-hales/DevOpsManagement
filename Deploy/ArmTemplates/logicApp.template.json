{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "AzureDevOpsOrganization": {
      "type": "string",
      "defaultValue": "sw4zf"
    },
    "StorageAccountName": {
      "type": "String"
    }
  },
  "variables": {
    "team": "zfProjectCreation Team",
    "workflows_sw4zf_ProjectCreation_name": "[concat('wf-', uniqueString(resourceGroup().id))]",
    "queueConnectionName": "[concat('queue-', uniqueString(resourceGroup().id))]",
    "devopsConnectionName": "[concat('devops-', uniqueString(resourceGroup().id))]"
  },
  "resources": [
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[variables('queueConnectionName')]",
      "location": "[resourceGroup().location]",
      "kind": "V1",
      "properties": {
        "displayName": "StorageQueueConnection",
        "customParameterValues": {},
        "api": {
          "id": "[concat('subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azurequeues')]"
        },
        "parameterValues": {
          "storageaccount": "[parameters('StorageAccountName')]",
          "sharedkey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value]"
        }
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[variables('devopsConnectionName')]",
      "location": "[resourceGroup().location]",
      "kind": "V1",
      "properties": {
        "displayName": "Azure DevOps",
        "customParameterValues": {},
        "api": {
          "id": "[concat('subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/visualstudioteamservices')]"
        }
      }
    },
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2017-07-01",
      "name": "[variables('workflows_sw4zf_ProjectCreation_name')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections/', variables('queueConnectionName'))]",
        "[resourceId('Microsoft.Web/connections/', variables('devopsConnectionName'))]"
      ],
      "location": "[resourceGroup().location]",
      "properties": {
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            }
          },
          "triggers": {
            "When_a_work_item_is_updated": {
              "recurrence": {
                "frequency": "Minute",
                "interval": 1
              },
              "splitOn": "@triggerBody()?['value']",
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['visualstudioteamservices']['connectionId']"
                  }
                },
                "method": "get",
                "path": "/v2/workitemupdated_trigger/@{encodeURIComponent('zfProjectCreation')}/_apis/wit/wiql",
                "queries": {
                  "account": "[parameters('AzureDevOpsOrganization')]",
                  "team": "[variables('team')]",
                  "wiql__System_State": "Approved",
                  "wiql__System_WorkItemType": "Project"
                }
              }
            }
          },
          "actions": {
            "Put_a_message_on_a_queue": {
              "runAfter": {},
              "type": "ApiConnection",
              "inputs": {
                "body": "{\n\"createType\": \"Project\",\n\"workItemId\": @{triggerBody()?['fields']?['System_Id']},\n\"projectName\": \"@{triggerBody()?['fields']?['System_Title']}\",\n\"projectDescription\": \"@{triggerBody()?['fields']?['System_Description']}\",\n\"dataOwner1\": \"@{triggerBody()?['fields']?['Custom_DataOwner']}\", \n\"dataOwner2\": \"@{triggerBody()?['fields']?['Custom_DataOwner2']}\",\n\"requestor\": \"@{triggerBody()?['fields']?['Custom_Requestor']}\",\n\"costCenter\": \"@{triggerBody()?['fields']?['Custom_CostCenter']}\",\n\"costCenterManager\": \"@{triggerBody()?['fields']?['Custom_CostCenterManager']}\"\n}",
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azurequeues']['connectionId']"
                  }
                },
                "method": "post",
                "path": "/@{encodeURIComponent('azprojectsetup')}/messages"
              }
            },
            "Update_a_work_item": {
              "runAfter": {
                "Put_a_message_on_a_queue": [
                  "Succeeded"
                ]
              },
              "type": "ApiConnection",
              "inputs": {
                "body": {
                  "userEnteredFields": {
                    "State": "Pending"
                  }
                },
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['visualstudioteamservices']['connectionId']"
                  }
                },
                "method": "patch",
                "path": "/_apis/wit/workitems/@{encodeURIComponent(triggerBody()?['fields']?['System_Id'])}",
                "queries": {
                  "account": "[parameters('AzureDevOpsOrganization')]"
                }
              }
            }
          },
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "azurequeues": {
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('queueConnectionName'))]",
                "connectionName": "[variables('queueConnectionName')]",
                "id": "[concat('subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azurequeues')]"
              },
              "visualstudioteamservices": {
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('devopsConnectionName'))]",
                "connectionName": "[variables('devopsConnectionName')]",
                "id": "[concat('subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/visualstudioteamservices')]"
              }
            }
          }
        }
      }
    }
  ],
  "outputs": {}
}