{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "AzDevOpsOrga": {
      "defaultValue": "myorga",
      "type": "String"
    },
    "AzDevOpsCreationProject": {
      "defaultValue": "AzDOProjectCreation",
      "type": "String"
    },
    "AzDevOpsCreationProjectTeam": {
      "defaultValue": "[concat(parameters('AzDevOpsCreationProject'), ' Team')]",
      "type": "String"
    },
    "storageAccounts_name": {
      "type": "String"
    },
    "storageAccounts_key": {
      "type": "String"
    }
  },
  "variables": {
    "logicAppName": "[concat(parameters('AzDevOpsCreationProject'), 'LA')]",
    "azureQueueName": "[concat(parameters('AzDevOpsCreationProject'), 'QueueConnection')]",
    "azureDevOpsName": "[concat(parameters('AzDevOpsCreationProject'), 'DevOpsConnection')]"
  },
  "resources": [
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[variables('azureQueueName')]",
      "location": "[resourceGroup().location]",
      "kind": "V1",
      "properties": {
        "displayName": "azurequeues",
        "parameterValues": {
          "accountName": "[parameters('storageAccounts_name')]",
          "accessKey": "[parameters('storageAccounts_key')]"
        },
        "api": {
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourceGroup().location , '/managedApis/azureblob')]"
        }
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[variables('azureDevOpsName')]",
      "location": "[resourceGroup().location]",
      "kind": "V1",
      "properties": {
        "displayName": "visualstudioteamservices",
        "api": {
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourceGroup().location , '/managedApis/visualstudioteamservices')]"
        }
      }
    },
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2017-07-01",
      "name": "[variables('logicAppName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', variables('azureQueueName'))]",
        "[resourceId('Microsoft.Web/connections', variables('azureDevOpsName'))]"
      ],

      "properties": {
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            }
          },
          "triggers": {
            "When_a_work_item_is_updated": {
              "recurrence": {
                "frequency": "Minute",
                "interval": 1
              },
              "splitOn": "@triggerBody()?['value']",
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['visualstudioteamservices']['connectionId']"
                  }
                },
                "method": "get",
                "path": "[concat('/v2/workitemupdated_trigger/@{encodeURIComponent(',parameters('AzDevOpsCreationProject'),')}/_apis/wit/wiql')]",
                "queries": {
                  "account": "[parameters('AzDevOpsOrga')]",
                  "team": "[parameters('AzDevOpsCreationProjectTeam')]",
                  "wiql__System_State": "Approved",
                  "wiql__System_WorkItemType": "Project"
                }
              }
            }
          },
          "actions": {
            "Put_a_message_on_a_queue": {
              "runAfter": {},
              "type": "ApiConnection",
              "inputs": {
                "body": "{\n\"createType\": \"Project\",\n\"workItemId\": @{triggerBody()?['fields']?['System_Id']},\n\"projectName\": \"@{triggerBody()?['fields']?['System_Title']}\",\n\"projectDescription\": \"@{triggerBody()?['fields']?['System_Description']}\",\n\"dataOwner1\": \"@{triggerBody()?['fields']?['Custom_DataOwner']}\", \n\"dataOwner2\": \"@{triggerBody()?['fields']?['Custom_DataOwner2']}\",\n\"requestor\": \"@{triggerBody()?['fields']?['Custom_Requestor']}\",\n\"costCenter\": \"@{triggerBody()?['fields']?['Custom_CostCenter']}\",\n\"costCenterManager\": \"@{triggerBody()?['fields']?['Custom_CostCenterManager']}\"\n}",
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azurequeues']['connectionId']"
                  }
                },
                "method": "post",
                "path": "/@{encodeURIComponent('azprojectsetup')}/messages"
              }
            },
            "Update_a_work_item": {
              "runAfter": {
                "Put_a_message_on_a_queue": [
                  "Succeeded"
                ]
              },
              "type": "ApiConnection",
              "inputs": {
                "body": {
                  "userEnteredFields": {
                    "State": "Pending"
                  }
                },
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['visualstudioteamservices']['connectionId']"
                  }
                },
                "method": "patch",
                "path": "/_apis/wit/workitems/@{encodeURIComponent(triggerBody()?['fields']?['System_Id'])}",
                "queries": {
                  "account": "[parameters('AzDevOpsOrga')]"
                }
              }
            }
          },
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "azurequeues": {
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('azureQueueName'))]",
                "connectionName": "azurequeues",
                "id": "[concat('/subscriptions/',subscription().id,'/providers/Microsoft.Web/locations/',resourceGroup().location,'/managedApis/azurequeues')]"
              },
              "visualstudioteamservices": {
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('azureDevOpsName'))]",
                "connectionName": "visualstudioteamservices",
                "id": "[concat('/subscriptions/',subscription().id,'/providers/Microsoft.Web/locations/',resourceGroup().location,'/managedApis/visualstudioteamservices')]"
              }
            }
          }
        }
      }
    }
  ]
}